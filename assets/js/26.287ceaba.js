(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{353:function(s,t,_){"use strict";_.r(t);var o=_(4),v=Object(o.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"paxos"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#paxos"}},[s._v("#")]),s._v(" Paxos")]),s._v(" "),t("p",[t("strong",[s._v("Paxos算法")]),s._v("是莱斯利·兰伯特（英语：Leslie Lamport）于1990年提出的一种基于消息传递且具有高度容错特性的共识（consensus）算法。")]),s._v(" "),t("p",[s._v("需要注意的是，Paxos常被误称为“一致性算法”。但是“"),t("strong",[s._v("一致性（consistency）")]),s._v("”和“"),t("strong",[s._v("共识（consensus）")]),s._v("”并不是同一个概念。Paxos是一个"),t("strong",[s._v("共识（consensus）算法")]),s._v("。")]),s._v(" "),t("p",[s._v("一致性和共识是分布式系统和分布式计算中两个相关但不同的概念。")]),s._v(" "),t("ol",[t("li",[t("strong",[s._v("一致性（Consistency）：")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("含义：")]),s._v(" 一致性指的是在分布式系统中的多个节点或副本之间保持数据的一致状态。这意味着当一个节点更新了数据，其他节点也应该能够在一定时间内看到这个更新，确保系统的行为对于所有用户都是一致的。")]),s._v(" "),t("li",[t("strong",[s._v("实现：")]),s._v(" 一致性通常可以通过强一致性、弱一致性、最终一致性等不同的一致性模型来实现。不同的应用场景可能需要不同级别的一致性，而一致性的实现可能牺牲一些性能以获得更高的数据一致性。")])])]),s._v(" "),t("li",[t("strong",[s._v("共识（Consensus）：")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("含义：")]),s._v(" 共识是指在一个分布式系统中的一组节点就某个事务或决策达成一致的过程。在共识算法中，系统的节点通过相互通信达成一致的共同决策，即使系统中的一些节点可能发生故障或者消息丢失。")]),s._v(" "),t("li",[t("strong",[s._v("实现：")]),s._v(" 共识算法的实现通常涉及到在不同节点之间进行协商和协调，确保最终所有节点对某个提案或决策达成一致。著名的共识算法包括"),t("strong",[s._v("Paxos")]),s._v("、"),t("strong",[s._v("Raft")]),s._v("等。")])])])]),s._v(" "),t("p",[s._v("在总体上，一致性是更为广泛的概念，它关注数据在分布式系统中的"),t("strong",[s._v("一致性状态")]),s._v("，而共识更专注于在分布式系统中的"),t("strong",[s._v("节点之间达成一致的过程")]),s._v("。共识算法通常是为了解决一致性的问题而提出的方法之一，帮助确保系统中的节点能够就某个决策达成共识。")]),s._v(" "),t("p",[s._v("参考链接")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://zh.wikipedia.org/wiki/Paxos%E7%AE%97%E6%B3%95#",target:"_blank",rel:"noopener noreferrer"}},[s._v("Paxos算法"),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("​")])])}),[],!1,null,null,null);t.default=v.exports}}]);