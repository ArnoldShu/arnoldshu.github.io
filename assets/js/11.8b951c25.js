(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{336:function(a,t,n){"use strict";n.r(t);var e=n(4),r=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"java-注解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java-注解"}},[a._v("#")]),a._v(" Java 注解")]),a._v(" "),t("p",[a._v("Java 注解（Annotation）又称 Java 标注，是 JDK5.0 引入的一种注释机制,Java提供了一种原程序中的元素(类、方法、变量、参数和包等)\n关联任何信息和任何元数据的途径和方法(Java反射)。")]),a._v(" "),t("h3",{attrs:{id:"标准注解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#标准注解"}},[a._v("#")]),a._v(" 标准注解")]),a._v(" "),t("p",[a._v("java 1.5引入注解，其中Java SE5内置了三种标准注解：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v(" @Override，表示当前的方法定义将覆盖超类中的方法。\n \n @Deprecated，使用了注解为它的元素编译器将发出警告，因为注解@Deprecated是不赞成使用的代码，被弃用的代码。\n \n @SuppressWarnings，指示编译器去忽略注解中声明的警告。\n")])])]),t("h3",{attrs:{id:"元注解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#元注解"}},[a._v("#")]),a._v(" 元注解")]),a._v(" "),t("p",[a._v("元注解：作用在其他注解的注解,即注解的注解")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("@Target 表示该注解可以用于什么地方，可能的ElementType参数有：\n        1.CONSTRUCTOR：构造器的声明 \n        2.FIELD：域声明（包括enum实例）\n        3.LOCAL_VARIABLE：局部变量声明 \n        4.METHOD：方法声明 \n        5.PACKAGE：包声明 \n        6.PARAMETER 参数声明 \n        7.TYPE：类、接口（包括注解类型）或enum声明 \n\n@Retention  表示需要在什么级别保存该注解信息。可选的RetentionPolicy参数包括：\n            1.SOURCE：注解将被编译器丢弃 \n            2.CLASS：注解在class文件中可用，但会被VM丢弃 \n            3.RUNTIME：VM将在运行期间保留注解，因此可以通过反射机制读取注解的信息\n\n@Document 将注解包含在Javadoc中 \n\n@Inherited 允许子类继承父类中的注解\n \n从 Java 7 开始，额外添加了 3 个注解:\n@SafeVarargs - Java 7 开始支持，忽略任何使用参数为泛型变量的方法或构造函数调用产生的警\n\n@FunctionalInterface - Java 8 开始支持，标识一个匿名函数或函数式接口\n\n@Repeatable - Java 8 开始支持，标识某注解可以在同一个声明上使用多次\n")])])]),t("h3",{attrs:{id:"自定义注解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自定义注解"}},[a._v("#")]),a._v(" 自定义注解")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://fastly.jsdelivr.net/gh/ArnoldShu/cdn/01.backend/011.Java/img.png",alt:"自定义注解语法"}})]),a._v(" "),t("h2",{attrs:{id:"项目"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#项目"}},[a._v("#")]),a._v(" 项目")]),a._v(" "),t("h3",{attrs:{id:"github地址"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#github地址"}},[a._v("#")]),a._v(" github地址")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/ArnoldShu/custom_annotations",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://github.com/ArnoldShu/custom_annotations"),t("OutboundLink")],1)]),a._v(" "),t("h3",{attrs:{id:"gitee地址"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gitee地址"}},[a._v("#")]),a._v(" gitee地址")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://gitee.com/ArnoldSu/custom_annotations",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://gitee.com/ArnoldSu/custom_annotations"),t("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=r.exports}}]);