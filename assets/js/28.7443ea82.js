(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{356:function(e,s,t){"use strict";t.r(s);var a=t(4),n=Object(a.a)({},(function(){var e=this,s=e._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h2",{attrs:{id:"zookeeper"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper"}},[e._v("#")]),e._v(" Zookeeper")]),e._v(" "),s("p",[s("strong",[e._v("Apache ZooKeeper")]),e._v("是"),s("a",{attrs:{href:"https://zh.wikipedia.org/wiki/Apache%E8%BD%AF%E4%BB%B6%E5%9F%BA%E9%87%91%E4%BC%9A",target:"_blank",rel:"noopener noreferrer"}},[e._v("Apache软件基金会"),s("OutboundLink")],1),e._v("的一个软件项目，它为大型"),s("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E5%88%86%E5%B8%83%E5%BC%8F%E8%AE%A1%E7%AE%97",target:"_blank",rel:"noopener noreferrer"}},[e._v("分布式计算"),s("OutboundLink")],1),e._v("提供"),s("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E5%BC%80%E6%BA%90",target:"_blank",rel:"noopener noreferrer"}},[e._v("开源"),s("OutboundLink")],1),e._v("的分布式配置服务、同步服务和命名注册。ZooKeeper曾经是"),s("a",{attrs:{href:"https://zh.wikipedia.org/wiki/Hadoop",target:"_blank",rel:"noopener noreferrer"}},[e._v("Hadoop"),s("OutboundLink")],1),e._v("的一个子项目，但现在是一个独立的顶级项目。")]),e._v(" "),s("p",[e._v("zookeeper:定义是一个开源的分布式,为分布式应用提供协调服务的Apache的项目。\nzookeeper是一个基于观察者模式设计的"),s("strong",[e._v("分布式服务管理框架")]),e._v(",负责存储和管理大家的关心的数据,然后接受观察者注册,一旦数据的状态发生变化,zookeeper将负责通知已经在zookeeper上注册的那些观察者做出相应的反应\t\n"),s("strong",[e._v("zookeeper= 文件系统+通知机制")])]),e._v(" "),s("p",[e._v("特点")]),e._v(" "),s("ul",[s("li",[e._v("一个leader ,多个follower组成的集群")]),e._v(" "),s("li",[e._v("集群中只要半数以上的节点存活,zookeeper集群就能正常服务")]),e._v(" "),s("li",[e._v("全局数据一致,每个server保存一份相同的数据副本,client无论链接那个server,数据都是一致的")]),e._v(" "),s("li",[e._v("更新请求顺序进行,来自同一个client的更新请求按其发送顺序依次执行")]),e._v(" "),s("li",[e._v("数据更新原子性,要么成功要么失败")]),e._v(" "),s("li",[e._v("实时性,一定时间范围内,client能读到最新数据")])]),e._v(" "),s("h2",{attrs:{id:"zookeeper的数据结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper的数据结构"}},[e._v("#")]),e._v(" zookeeper的数据结构")]),e._v(" "),s("p",[e._v("数据模型的结构与Unix文件系统很相似,整体上可以看作是一个树,每个节点称作一个ZNode,每个ZNode默认能够存储1mb的数据,每个ZNode都可以通过其路径唯一标识")]),e._v(" "),s("h3",{attrs:{id:"zookeeper应用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper应用场景"}},[e._v("#")]),e._v(" "),s("strong",[e._v("zookeeper应用场景")])]),e._v(" "),s("ul",[s("li",[s("strong",[e._v("统一命名服务")]),e._v("\n分布式环境下,经常需要对应用/服务进行统一命名,便于识别(例如:ip不容易识别,域名容易记住)")]),e._v(" "),s("li",[s("strong",[e._v("统一配置管理")]),e._v("\n分布式环境下配置文件同步非常常见(集群中所有节点的配置信息是一致的.例如Kafka集群,配置文件修改后,希望能够快速同步到各个节点,配置管理可交由zookeeper,可将配置信息写入zookeeper上的一个Znode,各个客户端服务器监听这个Znode,一旦Znode中的数据被修改,Zookeeper将通知各个客户端服务器)")]),e._v(" "),s("li",[s("strong",[e._v("统一集群管理")]),e._v("\t\n分布式环境下,实时掌握各个节点的状态(可根据节点实时状态做出一些调整,实时监控节点状态变化,可将节点信息写入Znode,监听这个Znode可获取它的实时状态变化)")]),e._v(" "),s("li",[s("strong",[e._v("服务器节点动态上下线")]),e._v("\n实时洞察服务器的上下线")]),e._v(" "),s("li",[s("strong",[e._v("软负载均衡等")]),e._v("\n记录每台服务器的访问数,让访问数最少的服务器去处理最新的客户端请求")])]),e._v(" "),s("p",[e._v("下载地址:"),s("a",{attrs:{href:"http://archive.apache.org/dist/zookeeper/",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://archive.apache.org/dist/zookeeper/"),s("OutboundLink")],1)]),e._v(" "),s("h2",{attrs:{id:"本地模式安装zookeeper"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#本地模式安装zookeeper"}},[e._v("#")]),e._v(" 本地模式安装zookeeper")]),e._v(" "),s("ul",[s("li",[e._v("安装jdk")]),e._v(" "),s("li",[e._v("下载zookeeper包到linux你指定的目录,并解压")]),e._v(" "),s("li",[e._v("配置修改\n解压文件的conf文件夹下zoo_sample.cfg 文件修改为zoo.cfg\n修改zoo.cfg 修改dataDir路径(存储数据路径)")])]),e._v(" "),s("p",[e._v("zoo.cfg 配置参数")]),e._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The number of milliseconds of each tick 心跳包时间间隔")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("tickTime")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("2000")]),e._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The number of ticks that the initial 初始化最大时延tickTime*initLimit,leader与follower超过这个时间就断掉,通讯机制")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# synchronization phase can take")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("initLimit")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("10")]),e._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The number of ticks that can pass between")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# sending a request and getting an acknowledgement 启动完成之后的最大时延tickTime*syncLimit,leader与follower超过这个时间就断掉,通讯机制")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("syncLimit")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("5")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# the directory where the snapshot is stored.")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# do not use /tmp for storage, /tmp here is just 存储数据的地方")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# example sakes.")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("dataDir")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/home/zookeeper/zkdata\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# the port at which the clients will connect 客户端端口号")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("clientPort")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("2181")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# the maximum number of client connections.")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# increase this if you need to handle more clients 客户端最大连接数 ")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#maxClientCnxns=60")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Be sure to read the maintenance section of the")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# administrator guide before turning on autopurge.")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# http://zookeeper.apache.org/doc/current/zookeeperAdmin.html#sc_maintenance")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br")])]),s("p",[e._v("​")]),e._v(" "),s("h2",{attrs:{id:"启动zookeeper"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#启动zookeeper"}},[e._v("#")]),e._v(" 启动zookeeper")]),e._v(" "),s("p",[e._v("bin目录下")]),e._v(" "),s("div",{staticClass:"language-powershell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[e._v("zkCleanup"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("sh\nzkCli"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("cmd 客户端\nzkCli"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("sh 客户端\n\t回车无参启动 \n\tquit 退出客户端\n\n\t\nzkEnv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("cmd\nzkEnv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("sh\nzkServer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("cmd 服务端\nzkServer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("sh 服务端\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("start")]),e._v(" 启动\n\tstatus 状态\n\tstop 关闭\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br")])]),s("h2",{attrs:{id:"zookeeper选举master内部原理简析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper选举master内部原理简析"}},[e._v("#")]),e._v(" zookeeper选举master内部原理简析")]),e._v(" "),s("p",[s("strong",[e._v("半数机制:集群中只要半数以上机器存活,集群可用,集群适合奇数台服务器\nserver启动没有历史数据的情况下,先自投,选举状态一直是looking,集群相互交换选举信息,所以后加的server票数更多,超过半数以上的投票作为leader ,其他为follower")])]),e._v(" "),s("h2",{attrs:{id:"节点类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#节点类型"}},[e._v("#")]),e._v(" 节点类型")]),e._v(" "),s("ul",[s("li",[s("strong",[e._v("持久(Persistent)节点")]),e._v(" 客户端和服务端断开后节点不删除")]),e._v(" "),s("li",[s("strong",[e._v("临时(Ephemeral)节点")]),e._v(" 客户端和服务端断开后节点自删除")])]),e._v(" "),s("h2",{attrs:{id:"zookeeper集群搭建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper集群搭建"}},[e._v("#")]),e._v(" zookeeper集群搭建")]),e._v(" "),s("ul",[s("li",[e._v("首先单机zookeeper装好")]),e._v(" "),s("li",[e._v("集群环境善于利用xsync脚本同步文件数据")]),e._v(" "),s("li",[e._v("在相应的指定目录线面创建节点信息,zkdata在节点下\t创建一个myid文件其中的就是对应相应的server唯一标识,创建后同步到进群信息中并修改成相应的机器的唯一标识")]),e._v(" "),s("li",[e._v("修改zoo.cfg文件dataDir文件路径到指定目录,添加集群配置\nserver.A=B:C:D\nA对应一个服务器的你在myid里面配置的唯一标识 \tB是一个ip或者主机名  C是本服务器与集群中的leader服务器交换信息的端口 D 是集群中的leader挂掉之后,从新选举通信的端口\n"),s("strong",[e._v("特别注意,集群检验需要把所有集群机器启动")])])]),e._v(" "),s("h2",{attrs:{id:"zookeeper-shell"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper-shell"}},[e._v("#")]),e._v(" zookeeper shell")]),e._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("客户端命令\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("help")]),e._v(" 显示所有操作命令\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("ls")]),e._v("  显示当前znode所包含的数据内容  eg:ls /\n\nls2 / 显示当前节点节点的详细数据 eg: ls2 /\n\ncreate \n创建节点"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("如果不写入数据,则无法创建相应节点"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" eg:create /master "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"master"')]),e._v("\n创建短暂节点 eg:create "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-e")]),e._v(" /master1 "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"master1"')]),e._v("\n创建带序号的节点 eg:create "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-s")]),e._v(" /master3 "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"master3"')]),e._v("\n\n\nget 获得节点的值 eg:get /master \n\n显示结构体的字段属性 \n"),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("23134234")]),e._v("\ncZxid "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" 0x100000002\t\t\t创建节点的事务zxid \nctime "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" Wed Feb "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("26")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("23")]),e._v(":39:12 CST "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("2020")]),e._v("\t\t\tznode创建的毫秒数\nmZxid "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" 0x10000000e\t\t\tznode最后更新事务的zxid\nmtime "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" Thu Feb "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("27")]),e._v(" 00:25:55 CST "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("2020")]),e._v(" 最后修改的毫秒数 \npZxid "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" 0x100000002\t\t\t最后更新子节点的zxid\ncversion "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("\t\t\tznode子节点的变化号,znode子节点的修改次数\ndataVersion "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v("\t\t\tznode数据变化号\naclVersion "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("\t\t\tznode访问控制列表的变化号\nephemeralOwner "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" 0x0\t\t\t如果是临时节点,这是znode拥有者得session_id,如果不是则是0\ndataLength "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("8")]),e._v("\t\t\t\tznode数据长度 \nnumChildren "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("\t\t\t\tznode子节点的数量\n\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("set")]),e._v(" 修改节点的值 eg:set /master1 "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"master111111"')]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("watch")]),e._v(" 监听节点值变化 eg:get /master "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("watch")]),e._v("  一次有效\n\ndelete \n删除节点 eg:delete /master\n递归删除节点 eg:rmr /master \n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("stat")]),e._v(" 查看节点状态 "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("stat")]),e._v(" /master \n\nquit 退出客户端\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br"),s("span",{staticClass:"line-number"},[e._v("27")]),s("br"),s("span",{staticClass:"line-number"},[e._v("28")]),s("br"),s("span",{staticClass:"line-number"},[e._v("29")]),s("br"),s("span",{staticClass:"line-number"},[e._v("30")]),s("br"),s("span",{staticClass:"line-number"},[e._v("31")]),s("br"),s("span",{staticClass:"line-number"},[e._v("32")]),s("br"),s("span",{staticClass:"line-number"},[e._v("33")]),s("br"),s("span",{staticClass:"line-number"},[e._v("34")]),s("br"),s("span",{staticClass:"line-number"},[e._v("35")]),s("br"),s("span",{staticClass:"line-number"},[e._v("36")]),s("br"),s("span",{staticClass:"line-number"},[e._v("37")]),s("br"),s("span",{staticClass:"line-number"},[e._v("38")]),s("br"),s("span",{staticClass:"line-number"},[e._v("39")]),s("br"),s("span",{staticClass:"line-number"},[e._v("40")]),s("br"),s("span",{staticClass:"line-number"},[e._v("41")]),s("br")])]),s("h2",{attrs:{id:"zookeeper监听器原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper监听器原理"}},[e._v("#")]),e._v(" zookeeper监听器原理")]),e._v(" "),s("ul",[s("li",[e._v("创建一个main线程")]),e._v(" "),s("li",[e._v("其中在main线程中创建一个zookeeper的客户端,同时这个客户端拥有两个线程,一个负责网络通信(connection)一个负责监听(listener)")]),e._v(" "),s("li",[e._v("通过connection将注册的监听事件发送给zookeeper")]),e._v(" "),s("li",[e._v("在zookeeper的注册监听器列表将注册的监听事件添加到列表中")]),e._v(" "),s("li",[e._v("zookeeper监听到数据或者路径变化,就会将这个消息告诉给listener线程")]),e._v(" "),s("li",[e._v("listener就会调用相应的process()方法处理")])]),e._v(" "),s("h2",{attrs:{id:"常见的监听"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见的监听"}},[e._v("#")]),e._v(" 常见的监听")]),e._v(" "),s("p",[e._v("监听节点的数据变化\n"),s("strong",[e._v("get path [watch]")])]),e._v(" "),s("p",[e._v("监听子节点的增减变化\n"),s("strong",[e._v("ls path [watch]")])]),e._v(" "),s("h2",{attrs:{id:"面试主要考察点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#面试主要考察点"}},[e._v("#")]),e._v(" 面试主要考察点")]),e._v(" "),s("p",[s("strong",[e._v("zookeeper的选举机制,半数投票机制\nzookeeper的监听原理\nzookeeper的部署方式(单机,集群,伪集群),集群中的角色(leader,follower),集群至少三台服务器\nzookeeper的常用命令")])]),e._v(" "),s("h2",{attrs:{id:"上手代码地址-https-gitee-com-arnoldsu-zookeeper"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#上手代码地址-https-gitee-com-arnoldsu-zookeeper"}},[e._v("#")]),e._v(" 上手代码地址:"),s("a",{attrs:{href:"https://gitee.com/ArnoldSu/zookeeper",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://gitee.com/ArnoldSu/zookeeper"),s("OutboundLink")],1)]),e._v(" "),s("p",[e._v("​\t\t\n​\t\n​\t\t\n​\t\t\n​")]),e._v(" "),s("p",[e._v("参考链接")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://zh.wikipedia.org/zh-cn/Apache_ZooKeeper",target:"_blank",rel:"noopener noreferrer"}},[e._v("Wikipedia Apache ZooKeeper"),s("OutboundLink")],1)]),e._v(" "),s("p",[e._v("​")])])}),[],!1,null,null,null);s.default=n.exports}}]);